#!/usr/bin/env python3
"""
Script para crear variantes del prompt de editor_claridad
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.prompt_version_manager import get_prompt_manager

def create_editor_claridad_variants():
    """Crea 4 variantes del prompt de editor_claridad para testing"""
    
    manager = get_prompt_manager()
    agent_name = "editor_claridad"
    
    print(f"üìù Creando variantes para {agent_name}")
    print("=" * 50)
    
    # Variante 1: Con ejemplos concretos
    print("\n1Ô∏è‚É£ Creando variante: with_examples")
    manager.create_variant(
        agent_name=agent_name,
        variant_name="with_examples",
        modifications={
            "append": """EJEMPLO DE SALIDA ESPERADA:
{
  "paginas_texto_claro": {
    "1": "Bajo el √°rbol grande suena el viento suave\\nLas hojas verdes bailan con alegr√≠a\\nEl sol dorado brilla entre las ramas\\nY todo el jard√≠n canta su melod√≠a",
    "2": "[TEXTO COMPLETO DE LA P√ÅGINA 2]",
    "3": "[CONTINUAR CON TODAS LAS P√ÅGINAS...]",
    "10": "[TEXTO COMPLETO DE LA P√ÅGINA 10]"
  },
  "glosario": [
    {"original": "destella", "simple": "brilla"},
    {"original": "penumbra", "simple": "sombra"}
  ],
  "cambios_clave": [
    "Simplificaci√≥n de vocabulario complejo",
    "Clarificaci√≥n de im√°genes ambiguas"
  ],
  "qa": {"comprensibilidad": 5, "imagen_inequivoca": 5}
}

IMPORTANTE: INCLUIR TEXTO COMPLETO EN TODAS LAS 10 P√ÅGINAS."""
        }
    )
    
    # Variante 2: Con proceso estructurado paso a paso
    print("2Ô∏è‚É£ Creando variante: structured_process")
    manager.create_variant(
        agent_name=agent_name,
        variant_name="structured_process",
        modifications={
            "prepend": """PROCESO ESTRUCTURADO DE EDICI√ìN:
1. LEER: Analiza cada p√°gina del texto original
2. IDENTIFICAR: Marca palabras complejas y ambig√ºedades
3. SIMPLIFICAR: Reemplaza con vocabulario de 5 a√±os
4. VERIFICAR: Asegura una imagen clara por verso
5. VALIDAR: Confirma que cada p√°gina tiene texto completo

REGLA CR√çTICA: NO DEJAR NINGUNA P√ÅGINA VAC√çA O INCOMPLETA.""",
            "replace": {
                "Tu objetivo:": "Tu misi√≥n CR√çTICA:",
                "Devuelve √∫nicamente ese JSON.": "GENERA JSON COMPLETO CON LAS 10 P√ÅGINAS. NO TRUNCAR."
            }
        }
    )
    
    # Variante 3: Anti-truncamiento enf√°tico
    print("3Ô∏è‚É£ Creando variante: anti_truncation")
    manager.create_variant(
        agent_name=agent_name,
        variant_name="anti_truncation",
        modifications={
            "append": """
INSTRUCCIONES ANTI-TRUNCAMIENTO:
‚ö†Ô∏è DEBES generar texto para TODAS las 10 p√°ginas
‚ö†Ô∏è NUNCA dejes campos vac√≠os o con placeholder
‚ö†Ô∏è USA todos los tokens necesarios (tienes 8000 disponibles)
‚ö†Ô∏è Si una p√°gina queda vac√≠a, el trabajo ser√° RECHAZADO
‚ö†Ô∏è Completa TODO el JSON antes de terminar

VERIFICACI√ìN FINAL:
‚úì ¬øP√°gina 1 tiene texto? 
‚úì ¬øP√°gina 2 tiene texto?
‚úì ¬øP√°gina 3 tiene texto?
‚úì ¬øP√°gina 4 tiene texto?
‚úì ¬øP√°gina 5 tiene texto?
‚úì ¬øP√°gina 6 tiene texto?
‚úì ¬øP√°gina 7 tiene texto?
‚úì ¬øP√°gina 8 tiene texto?
‚úì ¬øP√°gina 9 tiene texto?
‚úì ¬øP√°gina 10 tiene texto?

SI ALGUNA RESPUESTA ES NO, COMPL√âTALA ANTES DE TERMINAR."""
        }
    )
    
    # Variante 4: Con criterios de simplificaci√≥n espec√≠ficos
    print("4Ô∏è‚É£ Creando variante: detailed_criteria")
    manager.create_variant(
        agent_name=agent_name,
        variant_name="detailed_criteria",
        modifications={
            "replace": {
                "hacer el texto cristalino sin perder belleza": """hacer el texto PERFECTAMENTE CLARO para ni√±os de 5 a√±os, manteniendo la belleza po√©tica.

CRITERIOS DE SIMPLIFICACI√ìN:
‚Ä¢ Vocabulario: M√°ximo nivel preescolar (5-6 a√±os)
‚Ä¢ Sintaxis: Oraciones simples, m√°ximo 10 palabras
‚Ä¢ Im√°genes: Una acci√≥n concreta por verso
‚Ä¢ Causalidad: Relaciones causa-efecto expl√≠citas
‚Ä¢ Temporalidad: Secuencia clara (primero, despu√©s, al final)

PALABRAS A EVITAR: destella, penumbra, resplandor, emanar, susurrar, vislumbrar
PREFERIR: brilla, sombra, luz, salir, hablar bajito, ver"""
            },
            "append": """
FORMATO ESTRICTO DEL JSON:
Cada p√°gina DEBE tener 4 versos de 8-10 s√≠labas.
Ninguna p√°gina puede quedar vac√≠a.
El glosario debe tener al menos 5 entradas.
Los cambios_clave deben listar al menos 3 mejoras espec√≠ficas."""
        }
    )
    
    print("\n" + "=" * 50)
    print("‚úÖ Variantes creadas exitosamente")
    
    # Listar variantes
    print("\nüìã Variantes disponibles:")
    variants = manager.list_variants(agent_name)
    for v in variants:
        print(f"  ‚Ä¢ {v['name']}: {v['file']}")
    
    print("\nüí° Para probar una variante:")
    print(f"   python test_prompt_optimization.py --agent {agent_name} --variant with_examples")
    
    return variants

if __name__ == "__main__":
    create_editor_claridad_variants()